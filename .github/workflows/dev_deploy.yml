on:
  push:
    branches:
      - develop
env:
  DOCKER_IMAGE_NAME: "${{ secrets.DOCKER_USERNAME }}/spring"
  EC2_HOST: ${{ secrets.EC2_HOST }}
  EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
  EC2_SSH_USER: ubuntu

jobs:
  build-and-push-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Create directories for application.yml
        run: mkdir -p .src/main/resources

      - name: Setup application.yml
        run: echo "${{ secrets.APPLICATION_YML }}" > ./src/main/resources/application.yml # yml 파일 이름(자유롭게 수정 가능)

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4 # v4.0.0

      - name: Grant execute permission for Gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle Wrapper
        run: ./gradlew build

      - name: Login to Docker Hub using Access Token
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and push Docker image
        run: |
          docker build -t ${{ env.DOCKER_IMAGE_NAME }}:latest -f Dockerfile .
          docker push ${{ env.DOCKER_IMAGE_NAME }}:latest

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_SSH_USER }}
          key: ${{ env.EC2_SSH_KEY }}
          script: |
            sudo docker pull ${{ env.DOCKER_IMAGE_NAME }}:latest
            sudo docker stop spring
            sudo docker rm spring
            sudo docker run -d -p 8080:8080 --name spring ${{ env.DOCKER_IMAGE_NAME }}:latest